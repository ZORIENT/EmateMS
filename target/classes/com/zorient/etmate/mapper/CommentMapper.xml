<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zorient.etmate.mapper.CommentMapper">
    <!-- 电影评论 -->
    <resultMap id="FilmComment" type="com.zorient.etmate.pojo.Comment">
        <id property="id" column="commentId"/>

        <result property="userId" column="userId"/>
        <result property="itemId" column="filmId"/>
        <result property="type" column="type"/>
        <result property="parentId" column="parentId"/>
        <result property="comment" column="comment"/>
        <result property="score" column="score"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <collection property="user" ofType="com.zorient.etmate.pojo.User">
            <id property="id" column="userId"/>
            <result property="avatar" column="avatar"/>
            <result property="username" column="username"/>
        </collection>
        <collection property="film" ofType="com.zorient.etmate.pojo.Film">
            <id property="id" column="filmId"/>
            <result property="cover" column="cover"/>
            <result property="filmName" column="film_name"/>
        </collection>
    </resultMap>

    <!-- 条件分页查询电影评论信息 -->
    <select id="selectFilmComment" resultMap="FilmComment">
        SELECT
        c.id commentId,u.id userId,u.avatar,u.username,f.id filmId,f.cover,f.film_name,
        c.type,c.parent_id parentId,c.comment,c.score,c.create_time,c.update_time
        FROM
        tb_comment c
        LEFT JOIN tb_user u ON c.user_id = u.id
        LEFT JOIN tb_film f ON c.item_id = f.id
        <where>
            <if test="userId !=null">
                c.user_id = #{userId}
            </if>
            <if test="username !=null and username !=''">
                and u.username like concat('%',#{username},'%')
            </if>
            <if test="type!=null">
                and c.type=#{type}
            </if>
            <if test="itemId!=null">
                and c.item_id =#{itemId}
            </if>
            <if test="itemName!=null and itemName">
                and f.film_name like concat('%',#{itemName},'%')
            </if>
            <if test="begin !=null and end !=null">
                and c.create_time between #{begin} and #{end}
            </if>
            <if test="parentId!=null">
                and c.parent_id =#{parentId}
            </if>
        </where>
        order by create_time desc
    </select>

    <!-- 游戏评论 -->
    <resultMap id="GameComment" type="com.zorient.etmate.pojo.Comment">
        <id property="id" column="commentId"/>

        <result property="userId" column="userId"/>
        <result property="itemId" column="gameId"/>
        <result property="type" column="type"/>
        <result property="parentId" column="parentId"/>
        <result property="comment" column="comment"/>
        <result property="score" column="score"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <collection property="user" ofType="com.zorient.etmate.pojo.User">
            <id property="id" column="userId"/>
            <result property="avatar" column="avatar"/>
            <result property="username" column="username"/>
        </collection>
        <collection property="game" ofType="com.zorient.etmate.pojo.Game">
            <id property="id" column="filmId"/>
            <result property="cover" column="cover"/>
            <result property="gameName" column="game_name"/>
        </collection>
    </resultMap>

    <!-- 条件分页查询游戏评论信息 -->
    <select id="selectGameComment" resultMap="GameComment">
        SELECT
        c.id commentId,u.id userId,u.avatar,u.username,g.id gameId,g.cover,g.game_name,
        c.type,c.parent_id parentId,c.`comment`,c.score,c.create_time,c.update_time
        FROM
        tb_comment c
        LEFT JOIN tb_user u ON c.user_id = u.id
        LEFT JOIN tb_game g ON c.item_id = g.id
        <where>
            <if test="userId !=null">
                c.user_id = #{userId}
            </if>
            <if test="username !=null and username !=''">
                and u.username like concat('%',#{username},'%')
            </if>
            <if test="type!=null">
                and c.type=#{type}
            </if>
            <if test="itemId!=null">
                and c.item_id =#{itemId}
            </if>
            <if test="itemName!=null and itemName">
                and g.game_name like concat('%',#{itemName},'%')
            </if>
            <if test="begin !=null and end !=null">
                and c.create_time between #{begin} and #{end}
            </if>
            <if test="parentId!=null">
                and c.parent_id =#{parentId}
            </if>
        </where>
        order by create_time desc
    </select>

    <!-- 书籍评论 -->
    <resultMap id="BookComment" type="com.zorient.etmate.pojo.Comment">
        <id property="id" column="commentId"/>

        <result property="userId" column="userId"/>
        <result property="itemId" column="bookId"/>
        <result property="type" column="type"/>
        <result property="parentId" column="parentId"/>
        <result property="comment" column="comment"/>
        <result property="score" column="score"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <collection property="user" ofType="com.zorient.etmate.pojo.User">
            <id property="id" column="userId"/>
            <result property="avatar" column="avatar"/>
            <result property="username" column="username"/>
        </collection>
        <collection property="book" ofType="com.zorient.etmate.pojo.Book">
            <id property="id" column="bookId"/>
            <result property="cover" column="cover"/>
            <result property="bookName" column="book_name"/>
        </collection>
    </resultMap>

    <!-- 条件分页查询书籍评论信息 -->
    <select id="selectBookComment" resultMap="BookComment">
        SELECT
        c.id commentId,u.id userId,u.avatar,u.username,b.id bookId,b.cover,b.book_name,
        c.type,c.parent_id parentId,c.`comment`,c.score,c.create_time,c.update_time
        FROM
        tb_comment c
        LEFT JOIN tb_user u ON c.user_id = u.id
        LEFT JOIN tb_book b ON c.item_id = b.id
        <where>
            <if test="userId !=null">
                c.user_id = #{userId}
            </if>
            <if test="username !=null and username !=''">
                and u.username like concat('%',#{username},'%')
            </if>
            <if test="type!=null">
                and c.type=#{type}
            </if>
            <if test="itemId!=null">
                and c.item_id =#{itemId}
            </if>
            <if test="itemName!=null and itemName">
                and b.book_name like concat('%',#{itemName},'%')
            </if>
            <if test="begin !=null and end !=null">
                and c.create_time between #{begin} and #{end}
            </if>
            <if test="parentId!=null">
                and c.parent_id =#{parentId}
            </if>
        </where>
        order by create_time desc
    </select>

    <!-- 添加评论 -->
    <insert id="insertComment">
        insert into tb_comment(user_id, item_id, type, parent_id, comment, score, create_time, update_time)
        values (#{userId}, #{itemId}, #{type}, #{parentId}, #{comment}, #{score}, #{createTime}, #{updateTime})
    </insert>

    <!-- 批量删除评论 -->
    <!-- 1.根据id删除父级评论 -->
    <delete id="deleteParentComment">
        delete from etmate.tb_comment where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <!-- 2.删除父级评论下的所有子级评论 -->
    <delete id="deleteChildrenComment">
        delete from etmate.tb_comment where parent_id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <!-- 更新评论 -->
    <update id="updateComment">
        update tb_comment
        <set>
            <if test="comment!=null and comment !=''">
                comment=#{comment},
            </if>
            <if test="score!=null">
                score=#{score},
            </if>
            <if test="updateTime!=null">
                update_time=#{updateTime}
            </if>
        </set>
        where id=#{id}
    </update>


</mapper>